services:
  social_media:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - my_media:/app/media
    command: >
      sh -c "python manage.py wait_for_db &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db


  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
          celery -A social_media_api_service worker -l INFO"
    depends_on:
      - social_media
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
          celery -A social_media_api_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - social_media
      - redis
      - db
    restart: on-failure
    env_file:
      - .env


  flower:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    command: >
      sh -c "python manage.py wait_for_db &&
          celery -A social_media_api_service flower --address=0.0.0.0"
    depends_on:
      - celery
    env_file:
      - .env


volumes:
  my_db:
  my_media:
